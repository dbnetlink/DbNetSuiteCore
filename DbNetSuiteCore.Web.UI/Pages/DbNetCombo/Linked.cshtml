@page
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums;
<style>
    fieldset {
        border: 1pt solid #111;
        border-radius: 2px;
    }

    td {
        vertical-align: top;
    }
</style>
<h2>Music</h2>
<table>
    <tr>
        <td>
            <fieldset>
                <legend>Artists</legend>
                <div id="artists"></div>
            </fieldset>
        </td>
        <td>
            <fieldset>
                <legend>Albums</legend>
                <div id="albums"></div>
            </fieldset>
        </td>
        <td>
            <fieldset>
                <legend>Tracks</legend>
                <div id="tracks"></div>
            </fieldset>
        </td>
    </tr>
</table>
<h2>Films</h2>
<table>
    <tr>
        <td>
            <fieldset>
                <legend>Genre</legend>
                <div id="genre"></div>
            </fieldset>
        </td>
        <td>
            <fieldset>
                <legend>Films</legend>
                <div id="films"></div>
            </fieldset>
        </td>
        <td>
            <fieldset>
                <legend>Actors</legend>
                <div id="actors"></div>
            </fieldset>
        </td>
    </tr>
</table>

<h2>Sales</h2>
<table>
    <tr>
        <td>
            <fieldset>
                <legend>Regions</legend>
                <div id="regions"></div>
            </fieldset>
        </td>
        <td>
            <fieldset>
                <legend>Territories</legend>
                <div id="territories"></div>
            </fieldset>
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <fieldset>
                <legend>Employees</legend>
                <div id="employees"></div>
            </fieldset>
        </td>
    </tr>
</table>
@{
    DbNetComboCore tracksCombo = new DbNetComboCore("chinook", "tracks", "trackid", "name", "tracks") { ForeignKeyColumn = "albumid", EmptyOptionText = "Please select a track ..." };
    DbNetComboCore albumsCombo = new DbNetComboCore("chinook", "albums", "albumid", "title", "albums") { ForeignKeyColumn = "artistid", EmptyOptionText = "Please select an album ..." };
    DbNetComboCore artistsCombo = new DbNetComboCore("chinook", "artists", "artistid", "name", "artists") { EmptyOptionText = "Please select an artist ..." };
    albumsCombo.AddLinkedControl(tracksCombo);
    artistsCombo.AddLinkedControl(albumsCombo);
    @artistsCombo.Render()

    DbNetComboCore actorsCombo = new DbNetComboCore("sakila", "film_actor join actor on film_actor.actor_id = actor.actor_id", "actor.actor_id", "last_name || ', ' || first_name", "actors") { ForeignKeyColumn = "film_actor.film_id", Size = 10, MultipleSelect = true };
    DbNetComboCore filmsCombo = new DbNetComboCore("sakila", "film_category join film on film.film_id = film_category.film_id", "film.film_Id", "title", "films") { ForeignKeyColumn = "film_category.category_id", Size = 10, MultipleSelect = true, AutoRowSelect = true };
    DbNetComboCore genreCombo = new DbNetComboCore("sakila", "category", "category_id", "name", "genre") { Size = 10, MultipleSelect = true, AutoRowSelect = true };
    filmsCombo.AddLinkedControl(actorsCombo);
    genreCombo.AddLinkedControl(filmsCombo);
    @genreCombo.Render()

    DbNetGridCore employeesGrid = new DbNetGridCore("northwind", "employees join employeeterritories on employees.employeeid = employeeterritories.employeeid", "employees") { View = true };

    employeesGrid.Columns = new List<string>() { "lastname", "firstname", "Title", "TitleOfCourtesy", "BirthDate", "HireDate", "Address", "City", "Region", "PostalCode", "Country", "HomePhone", "Extension", "photo", "notes", "reportsto", "photopath", "employees.EmployeeID", "territoryid" };

    employeesGrid.SetColumnProperty("reportsto", ColumnPropertyType.Lookup, new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname"));
    employeesGrid.SetColumnProperty("TerritoryId", ColumnPropertyType.Lookup, new Lookup("territories", "TerritoryId", "territorydescription"));
    employeesGrid.SetColumnProperty("Photo", ColumnPropertyType.Image, true);
    employeesGrid.SetColumnProperty(new String[] { "photo", "notes", "photopath" }, ColumnPropertyType.Display, false);
    employeesGrid.SetColumnProperty(new String[] { "firstname", "lastname", "photo", "notes", "photopath" }, ColumnPropertyType.View, true);
    employeesGrid.Bind(DbNetGridEventType.OnViewRecordSelected, "updateTitle");
    employeesGrid.SetColumnProperty("TerritoryId", ColumnPropertyType.ForeignKey, true);
    employeesGrid.SetColumnProperty(new String[] { "TerritoryId" }, ColumnPropertyType.GroupHeader, true);


    DbNetComboCore territoriesCombo = new DbNetComboCore("northwind", "territories", "territoryid", "territorydescription", "territories") { ForeignKeyColumn = "regionid", Size = 10, MultipleSelect = true, AutoRowSelect = true };
    DbNetComboCore regionsCombo = new DbNetComboCore("northwind", "regions", "regionid", "regiondescription", "regions") { Size = 10, MultipleSelect = true, AutoRowSelect = true };
    territoriesCombo.AddLinkedControl(employeesGrid);
    regionsCombo.AddLinkedControl(territoriesCombo);
    @employeesGrid.Render()
    @regionsCombo.Render()



}

<script type="text/javascript" class="source">
    function updateTitle(sender, args) {
        args.dialog.dialog("option", "title", args.record["firstname"] + " " + args.record["lastname"]);
    }
</script>
