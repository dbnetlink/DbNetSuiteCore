@page
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums.DbNetGrid;
@using DbNetEditEnums = DbNetSuiteCore.Enums.DbNetEdit;
@using DbNetSuiteCore.Enums;
<style>
    .row {
        display: flex; /* aligns all child elements (flex items) in a row */
    }

    .col {
        flex: 1; /* distributes space on the line equally among items */
        padding:10px;
    }
</style>

<div class="row">
    <div class="col" id="customersGrid"></div>
    <div class="col" id="customersEdit"></div>
</div>
<div class="row">
    <div class="col" id="ordersGrid"></div>
    <div class="col" id="ordersEdit"></div>
</div>
<div class="row">
    <div class="col" id="orderDetailsGrid"></div>
    <div class="col" id="orderDetailsEdit"></div>
</div>

@{
    DbNetEditCore orderDetailsEdit = new DbNetEditCore("northwind", "[order details]", "orderDetailsEdit")
    {
        Columns = new List<string> { "OrderID", "ProductID", "Quantity", "UnitPrice" },
        Insert = true,
        QuickSearch = true,
        Delete = true
    };

    orderDetailsEdit.Column("OrderID").ForeignKey();
    orderDetailsEdit.Column("ProductID").Lookup(new Lookup("Products", "ProductId", "ProductName")).Label("Product");
    orderDetailsEdit.Column("UnitPrice").Format("c");

    DbNetEditCore ordersEdit = new DbNetEditCore("northwind", "orders", "ordersEdit")
            {
                Columns = new List<string> { "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "ShipVia", "Freight" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    ordersEdit.Column("CustomerID").ForeignKey();
    ordersEdit.Column("EmployeeID").Lookup(new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname")).Label("Employee");
    ordersEdit.Column("ShipVia").Lookup(new Lookup("Shippers", "ShipperId", "CompanyName"));
    ordersEdit.Column("Freight").Format("c");

    DbNetEditCore customersEdit = new DbNetEditCore("northwind", "customers", "customersEdit")
    {
        Columns = new List<string> { "CustomerID", "CompanyName", "Address", "City" },
        Insert = true,
        QuickSearch = true,
        Delete = true
    };

    customersEdit.Column("CustomerID").Hidden();

    DbNetGridCore orderDetailsGrid = new DbNetGridCore("northwind", "[order details]", "orderDetailsGrid")
            {
                Columns = new List<string> { "OrderID", "ProductID", "Quantity", "UnitPrice" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    orderDetailsGrid.Column("OrderID").ForeignKey();
    orderDetailsGrid.Column("ProductID").Lookup(new Lookup("Products", "ProductId", "ProductName")).Label("Product");
    orderDetailsGrid.Column("UnitPrice").Format("c");
    orderDetailsGrid.AddLinkedControl(orderDetailsEdit);

    DbNetGridCore ordersGrid = new DbNetGridCore("northwind", "orders", "ordersGrid")
            {
                Columns = new List<string> { "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "ShipVia", "Freight" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    ordersGrid.Column("CustomerID").ForeignKey();
    ordersGrid.Column("EmployeeID").Lookup(new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname")).Label("Employee");
    ordersGrid.Column("ShipVia").Lookup(new Lookup("Shippers", "ShipperId", "CompanyName"));
    ordersGrid.Column("Freight").Format("c");
    ordersGrid.AddLinkedControl(orderDetailsGrid);
    ordersGrid.AddLinkedControl(ordersEdit);

    DbNetGridCore customersGrid = new DbNetGridCore("northwind", "customers", "customersGrid")
            {
                Columns = new List<string> { "CustomerID", "CompanyName", "Address", "City" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    customersGrid.Column("CustomerID").Hidden();
    customersGrid.AddLinkedControl(ordersGrid);
    customersGrid.AddLinkedControl(customersEdit);

    @customersGrid.Render()
}
