@page
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums.DbNetGrid;
@using DbNetEditEnums = DbNetSuiteCore.Enums.DbNetEdit;
@using DbNetSuiteCore.Enums;
<style>
    .row {
        display: flex; /* aligns all child elements (flex items) in a row */
    }

    .col {
        flex: 1; /* distributes space on the line equally among items */
        padding:10px;
    }
</style>

<div class="row">
    <div class="col" id="customersGrid"></div>
    <div class="col" id="customersEdit"></div>
</div>
<div class="row">
    <div class="col" id="ordersGrid"></div>
    <div class="col" id="ordersEdit"></div>
</div>
<div class="row">
    <div class="col" id="orderDetailsGrid"></div>
    <div class="col" id="orderDetailsEdit"></div>
</div>

@{
    DbNetEditCore orderDetailsEdit = new DbNetEditCore("northwind", "[order details]", "orderDetailsEdit")
            {
                Columns = new List<string> { "OrderID", "ProductID", "Quantity", "UnitPrice" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    orderDetailsEdit.SetColumnAsForeignKey("OrderID");
    orderDetailsEdit.SetColumnLookup("ProductID", new Lookup("Products", "ProductId", "ProductName"));
    orderDetailsEdit.SetColumnFormat("UnitPrice", "c");
    orderDetailsEdit.SetColumnLabel("ProductID", "Product");

    DbNetEditCore ordersEdit = new DbNetEditCore("northwind", "orders", "ordersEdit")
            {
                Columns = new List<string> { "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "ShipVia", "Freight" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    ordersEdit.SetColumnAsForeignKey("CustomerID");
    ordersEdit.SetColumnLookup("EmployeeID", new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname"));
    ordersEdit.SetColumnLookup("ShipVia", new Lookup("Shippers", "ShipperId", "CompanyName"));
    ordersEdit.SetColumnFormat("Freight", "c");
    ordersEdit.SetColumnLabel("EmployeeID", "Employee");

    DbNetEditCore customersEdit = new DbNetEditCore("northwind", "customers", "customersEdit")
            {
                Columns = new List<string> { "CustomerID", "CompanyName", "Address", "City" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    customersEdit.SetColumnHidden("CustomerID");

    DbNetGridCore orderDetailsGrid = new DbNetGridCore("northwind", "[order details]", "orderDetailsGrid")
            {
                Columns = new List<string> { "OrderID", "ProductID", "Quantity", "UnitPrice" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    orderDetailsGrid.SetColumnAsForeignKey("OrderID");
    orderDetailsGrid.SetColumnLookup("ProductID", new Lookup("Products", "ProductId", "ProductName"));
    orderDetailsGrid.SetColumnFormat("UnitPrice", "c");
    orderDetailsGrid.SetColumnLabel("ProductID", "Product");
    orderDetailsGrid.AddLinkedControl(orderDetailsEdit);

    DbNetGridCore ordersGrid = new DbNetGridCore("northwind", "orders", "ordersGrid")
            {
                Columns = new List<string> { "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "ShipVia", "Freight" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    ordersGrid.SetColumnAsForeignKey("CustomerID");
    ordersGrid.SetColumnLookup("EmployeeID", new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname"));
    ordersGrid.SetColumnLookup("ShipVia", new Lookup("Shippers", "ShipperId", "CompanyName"));
    ordersGrid.SetColumnFormat("Freight", "c");
    ordersGrid.SetColumnLabel("EmployeeID", "Employee");
    ordersGrid.AddLinkedControl(orderDetailsGrid);
    ordersGrid.AddLinkedControl(ordersEdit);

    DbNetGridCore customersGrid = new DbNetGridCore("northwind", "customers", "customersGrid")
            {
                Columns = new List<string> { "CustomerID", "CompanyName", "Address", "City" },
                Insert = true,
                QuickSearch = true,
                Delete = true
            };

    customersGrid.SetColumnHidden("CustomerID");
    customersGrid.AddLinkedControl(ordersGrid);
    customersGrid.AddLinkedControl(customersEdit);

    @customersGrid.Render()
}
