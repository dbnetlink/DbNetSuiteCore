@page
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums;
@{
    // Configure the grid and render
    DbNetGridCore imagesGrid = new DbNetGridCore("dbnetsuitecore", "MultipleImages");
    imagesGrid.Update = true;
    imagesGrid.Insert = true;
    imagesGrid.Delete = true;
    for (var i = 1; i <= 3; i++)
    {
        imagesGrid.SetColumnAsImage($"Content_{i}", new ImageConfiguration(new List<string>() { "jpg", "png" }, new Dictionary<FileMetaData, string>() { { FileMetaData.FileName, $"FileName_{i}" }, { FileMetaData.ContentType, $"ContentType_{i}" }, { FileMetaData.LastModified, $"LastModified_{i}" }, { FileMetaData.Size, $"Size_{i}" } }));
        imagesGrid.SetColumnDisplay(new string[] { $"ContentType_{i}", $"LastModified_{i}", $"Size_{i}" }, false);
        imagesGrid.EditControl.SetColumnDisplay(new string[] { $"ContentType_{i}", $"LastModified_{i}", $"Size_{i}" }, true);
    }
    imagesGrid.EditControl.LayoutColumns = 3;


    @imagesGrid.Render()

    DbNetGridCore filesGrid = new DbNetGridCore("dbnetsuitecore", "MultipleImages");
    filesGrid.Update = true;
    filesGrid.Insert = true;
    filesGrid.Delete = true;
    for (var i = 1; i <= 3; i++)
    {
        filesGrid.SetColumnAsFile($"Content_{i}", new FileConfiguration("pdf", new Dictionary<FileMetaData, string>() { { FileMetaData.FileName, $"FileName_{i}" }, { FileMetaData.ContentType, $"ContentType_{i}" }, { FileMetaData.LastModified, $"LastModified_{i}" }, { FileMetaData.Size, $"Size_{i}" } }));
        filesGrid.SetColumnDisplay(new string[] { $"ContentType_{i}", $"LastModified_{i}", $"Size_{i}" }, false);
        filesGrid.EditControl.SetColumnDisplay(new string[] { $"ContentType_{i}", $"LastModified_{i}", $"Size_{i}" }, true);
    }
    filesGrid.EditControl.LayoutColumns = 3;


    @filesGrid.Render()
}