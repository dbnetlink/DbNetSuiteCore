"use strict";class DbNetGridEdit extends DbNetSuite{constructor(n){super(n);this.columnName=undefined;this._delete=!1;this.fromPart="";this.insert=!1;this.navigation=!0;this.primaryKey=undefined;this.optimizeForLargeDataset=!1;this.quickSearch=!1;this.quickSearchDelay=1e3;this.quickSearchMinChars=3;this.quickSearchToken="";this.search=!0;this.searchFilterJoin="";this.searchParams=[];this.toolbarButtonStyle=ToolbarButtonStyle.Image;this.columns=[]}setColumnExpressions(...n){n.forEach(n=>{this.columns.push(this.newColumn(n,!1))})}setColumnKeys(...n){n.forEach((n,t)=>{this.columns[t].columnKey=n})}setColumnLabels(...n){let t=0;n.forEach(n=>{this.columns.length>t&&(this.columns[t].label=n,t++)})}setColumnProperty(n,t,i){if(n instanceof Array){n.forEach(n=>this.setColumnProperty(n,t,i));return}let r=this.columns.find(t=>this.matchingColumn(t,n));r==undefined&&(r=this.newColumn(n,!0),this.columns.push(r));r[t]=i}setColumnProperties(n,t){Object.keys(t).forEach(i=>{this.setColumnProperty(n,i,t[i])})}openSearchDialog(n){if(this.searchDialog){this.searchDialog.open();return}this.post("search-dialog",n).then(n=>{var t;(t=this.element)===null||t===void 0?void 0:t.append(n.dialog);this.searchDialog=new SearchDialog(`${this.id}_search_dialog`,this);this.searchDialog.open()})}quickSearchKeyPress(n){const t=n.target;window.clearTimeout(this.quickSearchTimerId);(t.value.length>=this.quickSearchMinChars||t.value.length==0||n.key=="Enter")&&(this.quickSearchTimerId=window.setTimeout(()=>{this.runQuickSearch(t.value)},this.quickSearchDelay))}runQuickSearch(n){if(this.quickSearchToken=n,this instanceof DbNetGrid){const n=this;n.currentPage=1;n.getPage()}else if(this instanceof DbNetEdit){const n=this;n.currentRow=1;n.getRows()}}lookup(n,t){if(t.lookupColumnIndex=parseInt(n.attr("columnIndex")),this.lookupDialog&&t.lookupColumnIndex==this.lookupDialog.columnIndex){this.lookupDialog.open();return}this.post("lookup",t).then(t=>{var i;this.lookupDialog||((i=this.element)===null||i===void 0?void 0:i.append(t.dialog),this.lookupDialog=new LookupDialog(`${this.id}_lookup_dialog`,this));this.lookupDialog.update(t,n);this.lookupDialog.open()})}newColumn(n,t){return this.constructor.name=="DbNetGrid"?new GridColumn({columnExpression:n},t):new EditColumn({columnExpression:n},t)}matchingColumn(n,t){var r,u,f,e,o,s,h,c;let i=!1;return((r=n.columnKey)===null||r===void 0?void 0:r.includes("."))&&(i=((f=(u=n.columnKey)===null||u===void 0?void 0:u.split(".").pop())===null||f===void 0?void 0:f.toLowerCase())==t.toLowerCase()),((o=(e=n.columnKey)===null||e===void 0?void 0:e.split(" ").pop())===null||o===void 0?void 0:o.toLowerCase())==t.toLowerCase()&&(i=!0),((h=(s=n.columnExpression)===null||s===void 0?void 0:s.split(" ").pop())===null||h===void 0?void 0:h.toLowerCase())==t.toLowerCase()&&(i=!0),i||(i=((c=n.columnKey)===null||c===void 0?void 0:c.toLowerCase())==t.toLowerCase()),i}assignForeignKey(n,t){if(n instanceof DbNetGridEdit){const r=n,i=r.columns.find(n=>n.foreignKey==!0);if(i==undefined)return;if(n instanceof DbNetEdit){const i=n;i.initialised&&i.updateForeignKeyValue(t)}i.foreignKeyValue=t?t:DbNetSuite.DBNull}}}