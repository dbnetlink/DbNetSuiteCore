"use strict";class DbNetEdit extends DbNetGridEdit{constructor(n){super(n);this.browseDialogId="";this.changes={};this.currentRow=1;this.delete=!1;this.editMode="update";this.insert=!1;this.layoutColumns=1;this.search=!0;this.totalRows=0;this.isEditDialog=!1;this.toolbarPosition==undefined&&(this.toolbarPosition="Bottom");this.maxImageHeight=100;this.formData=new FormData}initialize(n=null){this.element&&(this.element.empty(),this.editPanel=this.addPanel("form"),this.addLoadingPanel(),n&&(this.primaryKey=n),this.post("initialize",this.getRequest()).then(n=>{n.error==!1&&(this.updateColumns(n),this.configureEdit(n),this.initialised=!0,this.fireEvent("onInitialized"))}),this.linkedControls.forEach(n=>{n.isBrowseDialog&&(this.browseDialogControl=n)}))}addLinkedControl(n){this.linkedControls.push(n)}getRows(n){this.callServer("search",n)}columnValue(n){this.formElements().filter(`:input[name='${n}']`).data("value")}clearForm(){this.formElements().each(function(){const n=$(this);n.attr("type")=="checkbox"?n.prop("checked",!1).data("value",!1):n.val("").data("value","")});this.binaryElements().each(function(){const n=$(this);n.hide()})}disableForm(n){var t,i;this.initialised&&(this.clearForm(),this.formElements().not("[primarykey='true']").not("[foreignkey='true']").not("[datatype='Guid']").prop("disabled",n),(t=this.toolbarPanel)===null||t===void 0?void 0:t.find("button").prop("disabled",n),(i=this.toolbarPanel)===null||i===void 0?void 0:i.find("input.navigation").val(""),this.disable("SearchBtn",this.parentControlType!=""),this.disable("InsertBtn",this.parentControlType!=""),this.disable("QuickSearch",this.parentControlType!=""),n&&this.configureLinkedControls(null,DbNetSuite.DBNull))}configureEdit(n){var t,i,r,u;if(n.form){(t=this.editPanel)===null||t===void 0?void 0:t.html(n.form);this.formPanel=(i=this.editPanel)===null||i===void 0?void 0:i.find("table.dbnetedit-form");this.configureForm();const u=(r=this.editPanel)===null||r===void 0?void 0:r.find(".toolbar-container");this.toolbarPanel=this.addPanel("toolbar",u)}n.toolbar&&((u=this.toolbarPanel)===null||u===void 0?void 0:u.html(n.toolbar),this.configureToolbar(n));this.updateForm(n)}configureForm(){var n,t,i,r,u,f,e,o;const s=(n=this.formPanel)===null||n===void 0?void 0:n.find(`:input[name]`);for(let n=0;n<s.length;n++){const t=$(s[n]);this.fireEvent("onFormElementCreated",{formElement:t[0],columnName:t.attr("name")})}(t=this.formPanel)===null||t===void 0?void 0:t.find("[button-type='calendar']").on("click",n=>this.selectDate(n));(i=this.formPanel)===null||i===void 0?void 0:i.find("[button-type='clock']").on("click",n=>this.selectTime(n));(r=this.formPanel)===null||r===void 0?void 0:r.find("[button-type='lookup']").on("click",n=>this.editLookup(n));(u=this.formPanel)===null||u===void 0?void 0:u.find("[button-type='delete']").on("click",n=>this.deleteFile(n));(f=this.formPanel)===null||f===void 0?void 0:f.find("[button-type='upload']").on("click",n=>this.uploadFile(n));(e=this.formPanel)===null||e===void 0?void 0:e.find("img.dbnetedit").on("load",()=>{$(this).show()});(o=this.formPanel)===null||o===void 0?void 0:o.find("input[datatype='DateTime'").get().forEach(n=>{const t=$(n);this.addDatePicker(t,this.datePickerOptions)})}updateForm(n){var t,i;if(n.totalRows==0){this.disableForm(!0);return}(t=this.formPanel)===null||t===void 0?void 0:t.find(":input").not("[primarykey='true']").not("[foreignkey='true']").not("[datatype='Guid']").prop("disabled",!1);const r=n.record;for(const n in r){const t=(i=this.formPanel)===null||i===void 0?void 0:i.find(`:input[name='${n}']`);if(t.length!=0){const u=r[n];if(t.attr("type")=="checkbox"){const n=u===!0;t.prop("checked",n).data("value",n)}else t.val(u.toString()).data("value",u.toString());(t.attr("primarykey")||t.attr("foreignkey")||t.attr("datatype")=="Guid")&&t.prop("disabled",!0)}}const u=this;this.binaryElements().each(function(){const n=$(this);n.hide();u.downloadBinaryData(n)});const f=this.formElements().filter(":not(:disabled):first");f.trigger("focus");this.editMode="update";this.primaryKey=n.primaryKey;this.formData=new FormData;this.browseDialog&&this.browseDialog.isOpen()&&this.browseDialog.selectRow(this.currentRow);n.message&&this.message(n.message);this.configureLinkedControls(null,this.primaryKey);this.fireEvent("onRecordSelected",{formElements:this.formElements()})}callServer(n,t){this.post(n,this.getRequest()).then(n=>{n.error==!1&&(this.configureToolbar(n),this.updateForm(n)),t&&t(n)})}getRequest(){return{changes:this.changes,componentId:this.id,connectionString:this.connectionString,columns:this.columns.map(n=>n),columnName:this.columnName,currentRow:this.currentRow,culture:this.culture,fromPart:this.fromPart,layoutColumns:this.layoutColumns,navigation:this.navigation,quickSearch:this.quickSearch,quickSearchToken:this.quickSearchToken,search:this.search,searchFilterJoin:this.searchFilterJoin,searchParams:this.searchParams,totalRows:this.totalRows,primaryKey:this.primaryKey,isEditDialog:this.isEditDialog,insert:this.insert,"delete":this._delete,parentControlType:this.parentControlType,optimizeForLargeDataset:this.optimizeForLargeDataset,parentChildRelationship:this.parentChildRelationship,toolbarPosition:this.toolbarPosition,maxImageHeight:this.maxImageHeight}}configureToolbar(n){const t=this.controlElement("dbnetedit-toolbar").find(".navigation"),i=this.controlElement("no-records-cell"),r=this.isEditDialog?["Cancel","Apply"]:["First","Next","Previous","Last","Cancel","Apply","Search","Insert","Delete","Browse"];if(n.toolbar){r.forEach(n=>this.controlElement(`${n}Btn`).on("click",n=>this.handleClick(n)));this.controlElement("QuickSearch").on("keyup",n=>this.quickSearchKeyPress(n))}if(this.setInputElement("Rows",n.totalRows),this.configureToolbarButtons(!1),this.parentControlType&&this.parentChildRelationship=="OneToOne"){t.show();i.hide();return}n.totalRows==0?(t.hide(),i.show()):(t.show(),i.hide());this.controlElement("dbnetgrid-toolbar").find(".navigation").show();this.setInputElement("RowNumber",n.currentRow);this.setInputElement("RowCount",n.totalRows);this.currentRow=n.currentRow;this.totalRows=n.totalRows;this.disable("SearchBtn",!1);this.disable("InsertBtn",!1);this.disable("QuickSearch",!1);this.disable("FirstBtn",n.currentRow==1);this.disable("PreviousBtn",n.currentRow==1);this.disable("NextBtn",n.currentRow==n.totalRows);this.disable("LastBtn",n.currentRow==n.totalRows);this.disable("BrowseBtn",n.totalRows<2);this.disable("DeleteBtn",n.totalRows==0);this.disable("ApplyBtn",n.totalRows==0);this.disable("CancelBtn",n.totalRows==0)}updateColumns(n){var t;this.columns=[];(t=n.columns)===null||t===void 0?void 0:t.forEach(n=>{const t={columnExpression:n.columnExpression,columnName:n.columnName,label:n.label,format:n.format,foreignKey:n.foreignKey,foreignKeyValue:n.foreignKeyValue,lookup:n.lookup,style:n.style,display:n.display,dataType:n.dataType,primaryKey:n.primaryKey,index:n.index,editControlType:n.editControlType,pattern:n.pattern,browse:n.browse};this.columns.push(new EditColumn(t))})}handleClick(n){const t=n.target.id;switch(t){case this.controlElementId("FirstBtn"):this.currentRow=1;break;case this.controlElementId("NextBtn"):this.currentRow++;break;case this.controlElementId("PreviousBtn"):this.currentRow--;break;case this.controlElementId("LastBtn"):this.currentRow=this.totalRows}n.preventDefault();switch(t){case this.controlElementId("SearchBtn"):this.openSearchDialog(this.getRequest());break;case this.controlElementId("BrowseBtn"):this.initBrowseDialog();break;case this.controlElementId("ApplyBtn"):this.applyChanges();break;case this.controlElementId("CancelBtn"):this.cancelChanges();break;case this.controlElementId("InsertBtn"):this.insertRecord();break;case this.controlElementId("DeleteBtn"):this.deleteRecord();break;default:this.getRecord()}}configureLinkedControl(n,t){if(n instanceof DbNetEdit){const i=n;if(t==DbNetSuite.DBNull){i.disableForm(!0);return}i.parentChildRelationship=="OneToMany"&&(this.assignForeignKey(n,t),t=null);i.initialised?i.getRows():i.initialize(t)}if(n instanceof DbNetGrid){const i=n;i.isBrowseDialog==!1&&(this.assignForeignKey(i,t),i.currentPage=1,i.initialised?i.getPage():i.initialize())}}getRecord(n=null){n&&(this.primaryKey=n);this.callServer("getrecord")}insertRecord(){this.clearForm();const n=this;this.formElements().each(function(){const t=$(this);t.prop("disabled",!1);t.attr("primarykey")&&t.attr("autoincrement")&&t.prop("disabled",!0);t.attr("foreignkey")&&t.prop("disabled",!0);t.attr("datatype")=="Guid"&&t.attr("required")&&(t.prop("disabled",!0),t.val(n.uuid()));t.attr("initialvalue")&&t.val(t.attr("initialvalue"))});const t=this.formElements().filter(":not(:disabled):first");t.trigger("focus");this.editMode="insert";this.configureToolbarButtons(!0);this.configureLinkedControls(null,DbNetSuite.DBNull);this.fireEvent("onInsertInitalize",{formElements:this.formElements()})}updateForeignKeyValue(n){this.formElements().filter("[foreignkey='true']").attr("initialvalue",n===null||n===void 0?void 0:n.toString())}configureToolbarButtons(n){const t=this.controlElement("dbnetedit-toolbar").find(".navigation"),i=["SearchBtn","QuickSearch","InsertBtn","DeleteBtn","BrowseBtn",],r=this.controlElement("no-records-cell");n?t.hide():t.show();n?r.hide():r.show();for(let t=0;t<i.length;t++){const r=this.controlElement(i[t]);n?r.hide():r.show()}n&&(this.controlElement("ApplyBtn").prop("disabled",!1),this.controlElement("CancelBtn").prop("disabled",!1))}formElements(){var n;if((n=this.formPanel)!==null&&n!==void 0)return n.find(":input.dbnetedit,select.dbnetedit")}binaryElements(){var n;if((n=this.formPanel)!==null&&n!==void 0)return n.find("img,button.binary")}deleteRecord(){this.confirm("Please confirm deletion of the current record",this.formPanel,n=>this.deletionConfirmed(n))}deletionConfirmed(n){n==MessageBoxButtonType.Confirm&&this.post("delete-record",this.getRequest()).then(n=>{n.error==!1?this.recordDeleted():this.error(n.message)})}recordDeleted(){this.message("Record deleted");this.getRows();this.fireEvent("onRecordDeleted")}applyChanges(){const n={};let t=null;const i=this.formElements();if(i.filter("[required]").each(function(){var n;const t=$(this),i=(n=t.val())===null||n===void 0?void 0:n.toString().trim();i==""&&t.addClass("highlight")}),i.filter(".highlight").length>0){this.message("An entry in the highlighted field(s) is required");setTimeout(()=>this.clearHighlightedFields(),3e3);return}if(i.filter("[pattern]").each(function(){const n=$(this),i=n.attr("name");if(!this.reportValidity())return t={key:i,value:`Entry does not match the input pattern (${n.attr("pattern")})`},!1}),t!=null){this.message(t.value);this.highlightField(t.key.toLowerCase());return}(i.each(function(){const t=$(this),i=t.attr("name");t.attr("type")=="checkbox"?t.prop("checked")!=t.data("value")&&(n[i]=t.prop("checked")):t.val()!=t.data("value")&&(n[i]=t.val())}),$.isEmptyObject(n)!=!0||this.hasFormData()!=!1)&&(this.changes=n,this.hasFormData()?this.post("save-files",this.formData).then(n=>{this.submitChanges(n)}):this.submitChanges(null))}submitChanges(n){const t=this.getRequest();n&&(t.formCacheKey=n.formCacheKey);this.post(`${this.editMode}-record`,t).then(n=>{this.applyChangesCallback(n)})}cancelChanges(){this.editMode=="insert"?this.getRows():this.getRecord()}applyChangesCallback(n){if(n.validationMessage){this.message(n.validationMessage.value);this.highlightField(n.validationMessage.key.toLowerCase());return}if(n.error){this.error(n.message);return}this.message(n.message);this.editMode=="update"?(this.updateForm(n),this.fireEvent("onRecordUpdated")):(this.isEditDialog==!1&&this.getRows(),this.fireEvent("onRecordInserted"))}initBrowseDialog(){var n,t,i,r;((n=this.browseDialogControl)===null||n===void 0?void 0:n.initialised)?this.openBrowseDialog():((t=this.browseDialogControl)===null||t===void 0?void 0:t.internalBind("onInitialized",()=>this.openBrowseDialog()),(i=this.browseDialogControl)===null||i===void 0?void 0:i.internalBind("onRowSelected",(n,t)=>this.browseDialogRowSelected(n,t)),(r=this.browseDialogControl)===null||r===void 0?void 0:r.initialize())}openBrowseDialog(){var n;this.browseDialog||(this.browseDialog=new BrowseDialog(this.browseDialogId,this.browseDialogControl));(n=this.browseDialog)===null||n===void 0?void 0:n.show(this.currentRow)}browseDialogRowSelected(n,t){t.row.rowIndex!=this.currentRow&&(this.currentRow=t.row.rowIndex,this.getRecord())}message(n){var t;(t=this.editPanel)===null||t===void 0?void 0:t.find(".message").html(n).addClass("highlight");setTimeout(()=>this.clearMessage(),3e3)}clearMessage(){var n;(n=this.editPanel)===null||n===void 0?void 0:n.find(".message").html("&nbsp;").removeClass("highlight")}highlightField(n){this.formElements().filter(`[name='${n}']`).addClass("highlight");setTimeout(()=>this.clearHighlightedFields(),3e3)}clearHighlightedFields(){this.formElements().filter(".highlight").removeClass("highlight")}selectDate(n){const t=$(n.target),i=t.parent().find("input");i.attr("readonly")||i.prop("disabled")==!0||t.parent().find("input").datepicker("show")}editLookup(n){const t=$(n.target),i=t.parent().find("input"),r=this.getRequest();this.lookup(i,r)}uploadFile(n){if(this.uploadDialog){this.uploadDialog.show(n);return}this.post("upload-dialog",this.getRequest()).then(t=>{var i;(i=this.element)===null||i===void 0?void 0:i.append(t.dialog);this.uploadDialog=new UploadDialog(`${this.id}_upload_dialog`,this);this.uploadDialog.show(n)})}deleteFile(n){const t=$(n.currentTarget).closest("td").find("img");this.saveFile(t,null)}selectTime(n){const t=$(n.target);t.parent().find("input").timepicker("open");n.stopPropagation()}uuid(){function n(n){let t;return n==="y"?(t=["8","9","a","b"],t[Math.floor(Math.random()*t.length)]):(t=new Uint8Array(1),window.crypto.getRandomValues(t),(t[0]%16).toString(16))}return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,n)}downloadBinaryData(n){this.columnName=n.attr("name");this.post("download-column-data",this.getRequest(),!0).then(t=>{if(n)console.log(`blob size => ${t.size}`),t.size&&(n.attr("src",window.URL.createObjectURL(t)),n.show());else{const n=document.createElement("a");n.href=window.URL.createObjectURL(t);n.click()}})}saveFile(n,t,i=null){t?n.show():n.hide();const r=n.attr("name");this.formData.get(r)!=null&&this.formData.delete(r);t?this.formData.append(r,t):this.formData.append(r,new Blob);const u=this.formElements().filter(`:input[uploadmetadatacolumn='${r}']`),f=this;u.each(function(){const n=$(this);if(!t){n.val("");return}switch(n.attr("uploadmetadata")){case"FileName":n.val(i===null||i===void 0?void 0:i.fileName);break;case"Size":n.val(i===null||i===void 0?void 0:i.size);break;case"LastModified":f.applyLastModified(n,i===null||i===void 0?void 0:i.lastModified);break;case"ContentType":n.val(i===null||i===void 0?void 0:i.contentType)}})}applyLastModified(n,t){const i=this.getRequest();i.javascriptDate=t;i.columnName=n.attr("name");this.post("convert-date",i).then(t=>{n.val(t.convertedDate)})}hasFormData(){let n=!1;for(const t of this.formData.keys()){n=!0;break}return n}}