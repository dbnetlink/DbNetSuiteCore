"use strict";class DbNetCombo extends DbNetSuite{constructor(n){super();this.id="";this.connectionString="";this.initialised=!1;this.linkedControls=[];this.addEmptyOption=!1;this.emptyOptionText="";this.sql="";this.params={};this.currentValue="";this.id=n;this.element=$(`#${this.id}`);this.element.addClass("dbnetsuite").addClass("cleanslate");this.checkStyleSheetLoaded();this.element.length==0}initialize(){this.getPage();this.initialised=!0;this.fireEvent("onInitialized")}addLinkedControl(n){this.linkedControls.push(n)}reload(){this.getPage()}configureCombo(n){var t;(t=this.element)===null||t===void 0?void 0:t.html(n.data)}getPage(){this.post("page",this.getRequest()).then(n=>{n.error==!1&&this.configureCombo(n)})}getRequest(){return{componentId:this.id,connectionString:this.connectionString,sql:this.sql,params:this.params,addEmptyOption:this.addEmptyOption,emptyOptionText:this.emptyOptionText}}post(n,t,i=false){const r={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json;charset=UTF-8"},body:JSON.stringify(t)};return fetch(`~/dbnetcombo.dbnetsuite?action=${n}`,r).then(n=>{if(!n.ok)throw n;return i?n.blob():n.json()}).catch(n=>(n.text().then(n=>{console.error(n)}),Promise.reject()))}}